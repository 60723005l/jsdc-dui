{"version":3,"file":"to-be-empty-dom-element.js","sources":["../../../../../node_modules/@testing-library/jest-dom/dist/to-be-empty-dom-element.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeEmptyDOMElement = toBeEmptyDOMElement;\n\nvar _utils = require(\"./utils\");\n\nfunction toBeEmptyDOMElement(element) {\n  (0, _utils.checkHtmlElement)(element, toBeEmptyDOMElement, this);\n  return {\n    pass: isEmptyElement(element),\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeEmptyDOMElement`, 'element', ''), '', 'Received:', `  ${this.utils.printReceived(element.innerHTML)}`].join('\\n');\n    }\n  };\n}\n/**\n * Identifies if an element doesn't contain child nodes (excluding comments)\n * â„¹ Node.COMMENT_NODE can't be used because of the following issue \n * https://github.com/jsdom/jsdom/issues/2220\n *\n * @param {*} element an HtmlElement or SVGElement\n * @return {*} true if the element only contains comments or none\n */\n\n\nfunction isEmptyElement(element) {\n  const nonCommentChildNodes = [...element.childNodes].filter(node => node.nodeType !== 8);\n  return nonCommentChildNodes.length === 0;\n}"],"names":["Object","defineProperty","toBeEmptyDomElement","value","toBeEmptyDOMElement","element","_utils","checkHtmlElement","this","pass","isEmptyElement","message","utils","matcherHint","isNot","printReceived","innerHTML","join","require$$0","childNodes","filter","node","nodeType","length"],"mappings":"2OAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAEkBD,EAAAE,oBAI3B,SAASA,EAAoBC,GAE3B,OADA,EAAIC,EAAOC,kBAAkBF,EAASD,EAAqBI,MACpD,CACLC,KAAMC,EAAeL,GACrBM,QAAS,IACA,CAACH,KAAKI,MAAMC,aAAeL,KAAKM,MAAQ,OAAS,IAAzB,uBAAmD,UAAW,IAAK,GAAI,YAAa,KAAKN,KAAKI,MAAMG,cAAcV,EAAQW,cAAcC,KAAK,QAPlL,IAAIX,EAASY,EAqBb,SAASR,EAAeL,GAEtB,OAAuC,IADV,IAAIA,EAAQc,YAAYC,QAAOC,GAA0B,IAAlBA,EAAKC,WAC7CC"}