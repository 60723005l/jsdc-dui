{"version":3,"file":"to-have-attribute.js","sources":["../../../../../node_modules/@testing-library/jest-dom/dist/to-have-attribute.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveAttribute = toHaveAttribute;\n\nvar _utils = require(\"./utils\");\n\nfunction printAttribute(stringify, name, value) {\n  return value === undefined ? name : `${name}=${stringify(value)}`;\n}\n\nfunction getAttributeComment(stringify, name, value) {\n  return value === undefined ? `element.hasAttribute(${stringify(name)})` : `element.getAttribute(${stringify(name)}) === ${stringify(value)}`;\n}\n\nfunction toHaveAttribute(htmlElement, name, expectedValue) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveAttribute, this);\n  const isExpectedValuePresent = expectedValue !== undefined;\n  const hasAttribute = htmlElement.hasAttribute(name);\n  const receivedValue = htmlElement.getAttribute(name);\n  return {\n    pass: isExpectedValuePresent ? hasAttribute && this.equals(receivedValue, expectedValue) : hasAttribute,\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      const receivedAttribute = hasAttribute ? printAttribute(this.utils.stringify, name, receivedValue) : null;\n      const matcher = this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveAttribute`, 'element', this.utils.printExpected(name), {\n        secondArgument: isExpectedValuePresent ? this.utils.printExpected(expectedValue) : undefined,\n        comment: getAttributeComment(this.utils.stringify, name, expectedValue)\n      });\n      return (0, _utils.getMessage)(this, matcher, `Expected the element ${to} have attribute`, printAttribute(this.utils.stringify, name, expectedValue), 'Received', receivedAttribute);\n    }\n  };\n}"],"names":["Object","defineProperty","toHaveAttribute_1","value","toHaveAttribute","htmlElement","name","expectedValue","_utils","checkHtmlElement","this","isExpectedValuePresent","undefined","hasAttribute","receivedValue","getAttribute","pass","equals","message","to","isNot","receivedAttribute","printAttribute","utils","stringify","matcher","matcherHint","printExpected","secondArgument","comment","getAttributeComment","getMessage","require$$0"],"mappings":"+NAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAEcD,EAAAE,gBAYvB,SAASA,EAAgBC,EAAaC,EAAMC,IAC1C,EAAIC,EAAOC,kBAAkBJ,EAAaD,EAAiBM,MAC3D,MAAMC,OAA2CC,IAAlBL,EACzBM,EAAeR,EAAYQ,aAAaP,GACxCQ,EAAgBT,EAAYU,aAAaT,GAC/C,MAAO,CACLU,KAAML,EAAyBE,GAAgBH,KAAKO,OAAOH,EAAeP,GAAiBM,EAC3FK,QAAS,KACP,MAAMC,EAAKT,KAAKU,MAAQ,SAAW,KAC7BC,EAAoBR,EAAeS,EAAeZ,KAAKa,MAAMC,UAAWlB,EAAMQ,GAAiB,KAC/FW,EAAUf,KAAKa,MAAMG,aAAehB,KAAKU,MAAQ,OAAS,IAAzB,mBAA+C,UAAWV,KAAKa,MAAMI,cAAcrB,GAAO,CAC/HsB,eAAgBjB,EAAyBD,KAAKa,MAAMI,cAAcpB,QAAiBK,EACnFiB,QAASC,EAAoBpB,KAAKa,MAAMC,UAAWlB,EAAMC,KAE3D,OAAO,EAAIC,EAAOuB,YAAYrB,KAAMe,EAAS,wBAAwBN,mBAAqBG,EAAeZ,KAAKa,MAAMC,UAAWlB,EAAMC,GAAgB,WAAYc,MAxBvK,IAAIb,EAASwB,EAEb,SAASV,EAAeE,EAAWlB,EAAMH,GACvC,YAAiBS,IAAVT,EAAsBG,EAAO,GAAGA,KAAQkB,EAAUrB,KAG3D,SAAS2B,EAAoBN,EAAWlB,EAAMH,GAC5C,YAAiBS,IAAVT,EAAsB,wBAAwBqB,EAAUlB,MAAW,wBAAwBkB,EAAUlB,WAAckB,EAAUrB"}