{"version":3,"file":"to-have-accessible-description.js","sources":["../../../../../node_modules/@testing-library/jest-dom/dist/to-have-accessible-description.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveAccessibleDescription = toHaveAccessibleDescription;\n\nvar _domAccessibilityApi = require(\"dom-accessibility-api\");\n\nvar _utils = require(\"./utils\");\n\nfunction toHaveAccessibleDescription(htmlElement, expectedAccessibleDescription) {\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveAccessibleDescription, this);\n  const actualAccessibleDescription = (0, _domAccessibilityApi.computeAccessibleDescription)(htmlElement);\n  const missingExpectedValue = arguments.length === 1;\n  let pass = false;\n\n  if (missingExpectedValue) {\n    // When called without an expected value we only want to validate that the element has an\n    // accessible description, whatever it may be.\n    pass = actualAccessibleDescription !== '';\n  } else {\n    pass = expectedAccessibleDescription instanceof RegExp ? expectedAccessibleDescription.test(actualAccessibleDescription) : this.equals(actualAccessibleDescription, expectedAccessibleDescription);\n  }\n\n  return {\n    pass,\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.${toHaveAccessibleDescription.name}`, 'element', ''), `Expected element ${to} have accessible description`, expectedAccessibleDescription, 'Received', actualAccessibleDescription);\n    }\n  };\n}"],"names":["Object","defineProperty","toHaveAccessibleDescription_1","value","toHaveAccessibleDescription","htmlElement","expectedAccessibleDescription","_utils","checkHtmlElement","this","actualAccessibleDescription","_domAccessibilityApi","computeAccessibleDescription","missingExpectedValue","arguments","length","pass","RegExp","test","equals","message","to","isNot","getMessage","utils","matcherHint","name","require$$0","require$$1"],"mappings":"wWAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAE0BD,EAAAE,4BAMnC,SAASA,EAA4BC,EAAaC,IAChD,EAAIC,EAAOC,kBAAkBH,EAAaD,EAA6BK,MACvE,MAAMC,GAA8B,EAAIC,EAAqBC,8BAA8BP,GACrFQ,EAA4C,IAArBC,UAAUC,OACvC,IAAIC,GAAO,EAKTA,EAHEH,EAGqC,KAAhCH,EAEAJ,aAAyCW,OAASX,EAA8BY,KAAKR,GAA+BD,KAAKU,OAAOT,EAA6BJ,GAGtK,MAAO,CACLU,KAAAA,EACAI,QAAS,KACP,MAAMC,EAAKZ,KAAKa,MAAQ,SAAW,KACnC,OAAO,EAAIf,EAAOgB,YAAYd,KAAMA,KAAKe,MAAMC,YAAY,GAAGhB,KAAKa,MAAQ,OAAS,MAAMlB,EAA4BsB,OAAQ,UAAW,IAAK,oBAAoBL,gCAAkCf,EAA+B,WAAYI,MAtBrP,IAAIC,EAAuBgB,EAEvBpB,EAASqB"}