{"version":3,"file":"to-be-checked.js","sources":["../../../../../node_modules/@testing-library/jest-dom/dist/to-be-checked.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeChecked = toBeChecked;\n\nvar _ariaQuery = require(\"aria-query\");\n\nvar _utils = require(\"./utils\");\n\nfunction toBeChecked(element) {\n  (0, _utils.checkHtmlElement)(element, toBeChecked, this);\n\n  const isValidInput = () => {\n    return element.tagName.toLowerCase() === 'input' && ['checkbox', 'radio'].includes(element.type);\n  };\n\n  const isValidAriaElement = () => {\n    return roleSupportsChecked(element.getAttribute('role')) && ['true', 'false'].includes(element.getAttribute('aria-checked'));\n  };\n\n  if (!isValidInput() && !isValidAriaElement()) {\n    return {\n      pass: false,\n      message: () => `only inputs with type=\"checkbox\" or type=\"radio\" or elements with ${supportedRolesSentence()} and a valid aria-checked attribute can be used with .toBeChecked(). Use .toHaveValue() instead`\n    };\n  }\n\n  const isChecked = () => {\n    if (isValidInput()) return element.checked;\n    return element.getAttribute('aria-checked') === 'true';\n  };\n\n  return {\n    pass: isChecked(),\n    message: () => {\n      const is = isChecked() ? 'is' : 'is not';\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeChecked`, 'element', ''), '', `Received element ${is} checked:`, `  ${this.utils.printReceived(element.cloneNode(false))}`].join('\\n');\n    }\n  };\n}\n\nfunction supportedRolesSentence() {\n  return (0, _utils.toSentence)(supportedRoles().map(role => `role=\"${role}\"`), {\n    lastWordConnector: ' or '\n  });\n}\n\nfunction supportedRoles() {\n  return _ariaQuery.roles.keys().filter(roleSupportsChecked);\n}\n\nfunction roleSupportsChecked(role) {\n  var _roles$get;\n\n  return ((_roles$get = _ariaQuery.roles.get(role)) == null ? void 0 : _roles$get.props['aria-checked']) !== undefined;\n}"],"names":["Object","defineProperty","toBeChecked_1","value","toBeChecked","element","_utils","checkHtmlElement","this","isValidInput","tagName","toLowerCase","includes","type","roleSupportsChecked","getAttribute","pass","message","toSentence","_ariaQuery","roles","keys","filter","map","role","lastWordConnector","isChecked","checked","is","utils","matcherHint","isNot","printReceived","cloneNode","join","require$$0","require$$1","_roles$get","undefined","get","props"],"mappings":"2TAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAEUD,EAAAE,YAMnB,SAASA,EAAYC,IACnB,EAAIC,EAAOC,kBAAkBF,EAASD,EAAaI,MAEnD,MAAMC,EAAe,IACsB,UAAlCJ,EAAQK,QAAQC,eAA6B,CAAC,WAAY,SAASC,SAASP,EAAQQ,MAO7F,KAAKJ,KAHIK,EAAoBT,EAAQU,aAAa,UAAY,CAAC,OAAQ,SAASH,SAASP,EAAQU,aAAa,kBAI5G,MAAO,CACLC,MAAM,EACNC,QAAS,IAAM,sEAmBZ,EAAIX,EAAOY,YAMXC,EAAWC,MAAMC,OAAOC,OAAOR,GANSS,KAAIC,GAAQ,SAASA,OAAU,CAC5EC,kBAAmB,2GAhBrB,MAAMC,EAAY,IACZjB,IAAuBJ,EAAQsB,QACa,SAAzCtB,EAAQU,aAAa,gBAG9B,MAAO,CACLC,KAAMU,IACNT,QAAS,KACP,MAAMW,EAAKF,IAAc,KAAO,SAChC,MAAO,CAAClB,KAAKqB,MAAMC,aAAetB,KAAKuB,MAAQ,OAAS,IAAzB,eAA2C,UAAW,IAAK,GAAI,oBAAoBH,aAAe,KAAKpB,KAAKqB,MAAMG,cAAc3B,EAAQ4B,WAAU,OAAWC,KAAK,SA/BvM,IAAIf,EAAagB,EAEb7B,EAAS8B,EA4Cb,SAAStB,EAAoBU,GAC3B,IAAIa,EAEJ,YAA2GC,KAAtD,OAA5CD,EAAalB,EAAWC,MAAMmB,IAAIf,SAAiB,EAASa,EAAWG,MAAM"}