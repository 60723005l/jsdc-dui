{"version":3,"file":"to-have-description.js","sources":["../../../../../node_modules/@testing-library/jest-dom/dist/to-have-description.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveDescription = toHaveDescription;\n\nvar _utils = require(\"./utils\");\n\n// See algoritm: https://www.w3.org/TR/accname-1.1/#mapping_additional_nd_description\nfunction toHaveDescription(htmlElement, checkWith) {\n  (0, _utils.deprecate)('toHaveDescription', 'Please use toHaveAccessibleDescription.');\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveDescription, this);\n  const expectsDescription = checkWith !== undefined;\n  const descriptionIDRaw = htmlElement.getAttribute('aria-describedby') || '';\n  const descriptionIDs = descriptionIDRaw.split(/\\s+/).filter(Boolean);\n  let description = '';\n\n  if (descriptionIDs.length > 0) {\n    const document = htmlElement.ownerDocument;\n    const descriptionEls = descriptionIDs.map(descriptionID => document.getElementById(descriptionID)).filter(Boolean);\n    description = (0, _utils.normalize)(descriptionEls.map(el => el.textContent).join(' '));\n  }\n\n  return {\n    pass: expectsDescription ? checkWith instanceof RegExp ? checkWith.test(description) : this.equals(description, checkWith) : Boolean(description),\n    message: () => {\n      const to = this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(this, this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toHaveDescription`, 'element', ''), `Expected the element ${to} have description`, this.utils.printExpected(checkWith), 'Received', this.utils.printReceived(description));\n    }\n  };\n}"],"names":["Object","defineProperty","toHaveDescription_1","value","toHaveDescription","htmlElement","checkWith","_utils","deprecate","checkHtmlElement","this","expectsDescription","undefined","descriptionIDs","getAttribute","split","filter","Boolean","description","length","document","ownerDocument","descriptionEls","map","descriptionID","getElementById","normalize","el","textContent","join","pass","RegExp","test","equals","message","to","isNot","getMessage","utils","matcherHint","printExpected","printReceived","require$$0"],"mappings":"mOAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAEgBD,EAAAE,kBAKzB,SAASA,EAAkBC,EAAaC,IACtC,EAAIC,EAAOC,WAAW,oBAAqB,4CAC3C,EAAID,EAAOE,kBAAkBJ,EAAaD,EAAmBM,MAC7D,MAAMC,OAAmCC,IAAdN,EAErBO,GADmBR,EAAYS,aAAa,qBAAuB,IACjCC,MAAM,OAAOC,OAAOC,SAC5D,IAAIC,EAAc,GAElB,GAAIL,EAAeM,OAAS,EAAG,CAC7B,MAAMC,EAAWf,EAAYgB,cACvBC,EAAiBT,EAAeU,KAAIC,GAAiBJ,EAASK,eAAeD,KAAgBR,OAAOC,SAC1GC,GAAc,EAAIX,EAAOmB,WAAWJ,EAAeC,KAAII,GAAMA,EAAGC,cAAaC,KAAK,MAGpF,MAAO,CACLC,KAAMnB,EAAqBL,aAAqByB,OAASzB,EAAU0B,KAAKd,GAAeR,KAAKuB,OAAOf,EAAaZ,GAAaW,QAAQC,GACrIgB,QAAS,KACP,MAAMC,EAAKzB,KAAK0B,MAAQ,SAAW,KACnC,OAAO,EAAI7B,EAAO8B,YAAY3B,KAAMA,KAAK4B,MAAMC,aAAe7B,KAAK0B,MAAQ,OAAS,IAAzB,qBAAiD,UAAW,IAAK,wBAAwBD,qBAAuBzB,KAAK4B,MAAME,cAAclC,GAAY,WAAYI,KAAK4B,MAAMG,cAAcvB,OArB3P,IAAIX,EAASmC"}