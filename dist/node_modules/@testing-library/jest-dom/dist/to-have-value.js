import{__exports as e}from"../../../../_virtual/to-have-value.js";export{__exports as default}from"../../../../_virtual/to-have-value.js";import"../../../@babel/runtime/helpers/interopRequireDefault.js";import t from"lodash/isEqualWith";import"./utils.js";import{__exports as o}from"../../../../_virtual/utils.js";import{i as r}from"../../../../_virtual/interopRequireDefault.js";var a=r.exports;Object.defineProperty(e,"__esModule",{value:!0}),e.toHaveValue=function e(t,o){if((0,i.checkHtmlElement)(t,e,this),"input"===t.tagName.toLowerCase()&&["checkbox","radio"].includes(t.type))throw new Error("input with type=checkbox or type=radio cannot be used with .toHaveValue(). Use .toBeChecked() for type=checkbox or .toHaveFormValues() instead");const r=(0,i.getSingleElementValue)(t),a=void 0!==o;let l=o,u=r;o==r&&o!==r&&(l=`${o} (${typeof o})`,u=`${r} (${typeof r})`);return{pass:a?(0,s.default)(r,o,i.compareArraysAsSet):Boolean(r),message:()=>{const e=this.isNot?"not to":"to",t=this.utils.matcherHint((this.isNot?".not":"")+".toHaveValue","element",o);return(0,i.getMessage)(this,t,`Expected the element ${e} have value`,a?l:"(any)","Received",u)}}};var s=a(t),i=o;
//# sourceMappingURL=to-have-value.js.map
