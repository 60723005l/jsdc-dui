import{__exports as e}from"../../../../_virtual/to-have-errormessage.js";export{__exports as default}from"../../../../_virtual/to-have-errormessage.js";import"./utils.js";import{__exports as t}from"../../../../_virtual/utils.js";Object.defineProperty(e,"__esModule",{value:!0}),e.toHaveErrorMessage=function e(t,s){if((0,i.checkHtmlElement)(t,e,this),!t.hasAttribute("aria-invalid")||"false"===t.getAttribute("aria-invalid")){const e=this.isNot?".not":"";return{pass:!1,message:()=>(0,i.getMessage)(this,this.utils.matcherHint(`${e}.toHaveErrorMessage`,"element",""),"Expected the element to have invalid state indicated by",'aria-invalid="true"',"Received",t.hasAttribute("aria-invalid")?`aria-invalid="${t.getAttribute("aria-invalid")}"`:this.utils.printReceived(""))}}const a=void 0!==s,r=(t.getAttribute("aria-errormessage")||"").split(/\s+/).filter(Boolean);let o="";if(r.length>0){const e=t.ownerDocument,s=r.map((t=>e.getElementById(t))).filter(Boolean);o=(0,i.normalize)(s.map((e=>e.textContent)).join(" "))}return{pass:a?s instanceof RegExp?s.test(o):this.equals(o,s):Boolean(o),message:()=>{const e=this.isNot?"not to":"to";return(0,i.getMessage)(this,this.utils.matcherHint((this.isNot?".not":"")+".toHaveErrorMessage","element",""),`Expected the element ${e} have error message`,this.utils.printExpected(s),"Received",this.utils.printReceived(o))}}};var i=t;
//# sourceMappingURL=to-have-errormessage.js.map
