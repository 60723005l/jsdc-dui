{"version":3,"file":"index.js","sources":["../../../node_modules/indent-string/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n"],"names":["indentString","string","count","options","indent","includeEmptyLines","TypeError","regex","replace","repeat"],"mappings":"IAEAA,EAAiB,CAACC,EAAQC,EAAQ,EAAGC,KAOpC,GANAA,EAAU,CACTC,OAAQ,IACRC,mBAAmB,KAChBF,GAGkB,iBAAXF,EACV,MAAM,IAAIK,UACT,uDAAuDL,OAIzD,GAAqB,iBAAVC,EACV,MAAM,IAAII,UACT,uDAAuDJ,OAIzD,GAA8B,iBAAnBC,EAAQC,OAClB,MAAM,IAAIE,UACT,gEAAgEH,EAAQC,YAI1E,GAAc,IAAVF,EACH,OAAOD,EAGR,MAAMM,EAAQJ,EAAQE,kBAAoB,MAAQ,cAElD,OAAOJ,EAAOO,QAAQD,EAAOJ,EAAQC,OAAOK,OAAOP"}