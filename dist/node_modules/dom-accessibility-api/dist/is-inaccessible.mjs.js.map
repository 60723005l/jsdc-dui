{"version":3,"file":"is-inaccessible.mjs.js","sources":["../../../../node_modules/dom-accessibility-api/dist/is-inaccessible.mjs"],"sourcesContent":["/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param element\n * @param options\n * @returns {boolean} true if excluded, otherwise false\n */\nexport function isInaccessible(element) {\n  var _element$ownerDocumen;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$getComputedS = options.getComputedStyle,\n      getComputedStyle = _options$getComputedS === void 0 ? (_element$ownerDocumen = element.ownerDocument.defaultView) === null || _element$ownerDocumen === void 0 ? void 0 : _element$ownerDocumen.getComputedStyle : _options$getComputedS,\n      _options$isSubtreeIna = options.isSubtreeInaccessible,\n      isSubtreeInaccessibleImpl = _options$isSubtreeIna === void 0 ? isSubtreeInaccessible : _options$isSubtreeIna;\n\n  if (typeof getComputedStyle !== \"function\") {\n    throw new TypeError(\"Owner document of the element needs to have an associated window.\");\n  } // since visibility is inherited we can exit early\n\n\n  if (getComputedStyle(element).visibility === \"hidden\") {\n    return true;\n  }\n\n  var currentElement = element;\n\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement, {\n      getComputedStyle: getComputedStyle\n    })) {\n      return true;\n    }\n\n    currentElement = currentElement.parentElement;\n  }\n\n  return false;\n}\n\n/**\n *\n * @param element\n * @param options\n * @returns {boolean} - `true` if every child of the element is inaccessible\n */\nexport function isSubtreeInaccessible(element) {\n  var _element$ownerDocumen2;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$getComputedS2 = options.getComputedStyle,\n      getComputedStyle = _options$getComputedS2 === void 0 ? (_element$ownerDocumen2 = element.ownerDocument.defaultView) === null || _element$ownerDocumen2 === void 0 ? void 0 : _element$ownerDocumen2.getComputedStyle : _options$getComputedS2;\n\n  if (typeof getComputedStyle !== \"function\") {\n    throw new TypeError(\"Owner document of the element needs to have an associated window.\");\n  }\n\n  if (element.hidden === true) {\n    return true;\n  }\n\n  if (element.getAttribute(\"aria-hidden\") === \"true\") {\n    return true;\n  }\n\n  if (getComputedStyle(element).display === \"none\") {\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=is-inaccessible.mjs.map"],"names":["isInaccessible","element","_element$ownerDocumen","options","arguments","length","undefined","_options$getComputedS","getComputedStyle","ownerDocument","defaultView","_options$isSubtreeIna","isSubtreeInaccessible","isSubtreeInaccessibleImpl","TypeError","visibility","currentElement","parentElement","_element$ownerDocumen2","_options$getComputedS2","hidden","getAttribute","display"],"mappings":"AAYO,SAASA,EAAeC,GAC7B,IAAIC,EAEAC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC9EG,EAAwBJ,EAAQK,iBAChCA,OAA6C,IAA1BD,EAAmG,QAA/DL,EAAwBD,EAAQQ,cAAcC,mBAAmD,IAA1BR,OAAmC,EAASA,EAAsBM,iBAAmBD,EACnNI,EAAwBR,EAAQS,sBAChCC,OAAsD,IAA1BF,EAAmCC,EAAwBD,EAE3F,GAAgC,mBAArBH,EACT,MAAM,IAAIM,UAAU,qEAItB,GAA6C,WAAzCN,EAAiBP,GAASc,WAC5B,OAAO,EAKT,IAFA,IAAIC,EAAiBf,EAEde,GAAgB,CACrB,GAAIH,EAA0BG,EAAgB,CAC5CR,iBAAkBA,IAElB,OAAO,EAGTQ,EAAiBA,EAAeC,cAGlC,OAAO,EASF,SAASL,EAAsBX,GACpC,IAAIiB,EAEAf,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAC9Ee,EAAyBhB,EAAQK,iBACjCA,OAA8C,IAA3BW,EAAqG,QAAhED,EAAyBjB,EAAQQ,cAAcC,mBAAoD,IAA3BQ,OAAoC,EAASA,EAAuBV,iBAAmBW,EAE3N,GAAgC,mBAArBX,EACT,MAAM,IAAIM,UAAU,qEAGtB,OAAuB,IAAnBb,EAAQmB,SAIgC,SAAxCnB,EAAQoB,aAAa,gBAIiB,SAAtCb,EAAiBP,GAASqB"}