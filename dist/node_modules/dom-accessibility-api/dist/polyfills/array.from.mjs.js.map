{"version":3,"file":"array.from.mjs.js","sources":["../../../../../node_modules/dom-accessibility-api/dist/polyfills/array.from.mjs"],"sourcesContent":["/**\n * @source {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Polyfill}\n * but without thisArg (too hard to type, no need to `this`)\n */\nvar toStr = Object.prototype.toString;\n\nfunction isCallable(fn) {\n  return typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\";\n}\n\nfunction toInteger(value) {\n  var number = Number(value);\n\n  if (isNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || !isFinite(number)) {\n    return number;\n  }\n\n  return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n}\n\nvar maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(value) {\n  var len = toInteger(value);\n  return Math.min(Math.max(len, 0), maxSafeInteger);\n}\n/**\n * Creates an array from an iterable object.\n * @param iterable An iterable object to convert to an array.\n */\n\n\n/**\n * Creates an array from an iterable object.\n * @param iterable An iterable object to convert to an array.\n * @param mapfn A mapping function to call on every element of the array.\n * @param thisArg Value of 'this' used to invoke the mapfn.\n */\nexport default function arrayFrom(arrayLike, mapFn) {\n  // 1. Let C be the this value.\n  // edit(@eps1lon): we're not calling it as Array.from\n  var C = Array; // 2. Let items be ToObject(arrayLike).\n\n  var items = Object(arrayLike); // 3. ReturnIfAbrupt(items).\n\n  if (arrayLike == null) {\n    throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");\n  } // 4. If mapfn is undefined, then let mapping be false.\n  // const mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n\n\n  if (typeof mapFn !== \"undefined\") {\n    // 5. else\n    // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n    if (!isCallable(mapFn)) {\n      throw new TypeError(\"Array.from: when provided, the second argument must be a function\");\n    }\n  } // 10. Let lenValue be Get(items, \"length\").\n  // 11. Let len be ToLength(lenValue).\n\n\n  var len = toLength(items.length); // 13. If IsConstructor(C) is true, then\n  // 13. a. Let A be the result of calling the [[Construct]] internal method\n  // of C with an argument list containing the single item len.\n  // 14. a. Else, Let A be ArrayCreate(len).\n\n  var A = isCallable(C) ? Object(new C(len)) : new Array(len); // 16. Let k be 0.\n\n  var k = 0; // 17. Repeat, while k < lenâ€¦ (also steps a - h)\n\n  var kValue;\n\n  while (k < len) {\n    kValue = items[k];\n\n    if (mapFn) {\n      A[k] = mapFn(kValue, k);\n    } else {\n      A[k] = kValue;\n    }\n\n    k += 1;\n  } // 18. Let putStatus be Put(A, \"length\", len, true).\n\n\n  A.length = len; // 20. Return A.\n\n  return A;\n}\n//# sourceMappingURL=array.from.mjs.map"],"names":["toStr","Object","prototype","toString","isCallable","fn","call","maxSafeInteger","Math","pow","toLength","value","len","number","Number","isNaN","isFinite","floor","abs","toInteger","min","max","arrayFrom","arrayLike","mapFn","C","Array","items","TypeError","kValue","length","A","k"],"mappings":"AAIA,IAAIA,EAAQC,OAAOC,UAAUC,SAE7B,SAASC,EAAWC,GAClB,MAAqB,mBAAPA,GAAwC,sBAAnBL,EAAMM,KAAKD,GAiBhD,IAAIE,EAAiBC,KAAKC,IAAI,EAAG,IAAM,EAEvC,SAASC,EAASC,GAChB,IAAIC,EAjBN,SAAmBD,GACjB,IAAIE,EAASC,OAAOH,GAEpB,OAAII,MAAMF,GACD,EAGM,IAAXA,GAAiBG,SAASH,IAItBA,EAAS,EAAI,GAAK,GAAKL,KAAKS,MAAMT,KAAKU,IAAIL,IAH1CA,EASCM,CAAUR,GACpB,OAAOH,KAAKY,IAAIZ,KAAKa,IAAIT,EAAK,GAAIL,GAcrB,SAASe,EAAUC,EAAWC,GAG3C,IAAIC,EAAIC,MAEJC,EAAQ1B,OAAOsB,GAEnB,GAAiB,MAAbA,EACF,MAAM,IAAIK,UAAU,oEAKtB,QAAqB,IAAVJ,IAGJpB,EAAWoB,GACd,MAAM,IAAII,UAAU,qEAiBxB,IAXA,IASIC,EATAjB,EAAMF,EAASiB,EAAMG,QAKrBC,EAAI3B,EAAWqB,GAAKxB,OAAO,IAAIwB,EAAEb,IAAQ,IAAIc,MAAMd,GAEnDoB,EAAI,EAIDA,EAAIpB,GACTiB,EAASF,EAAMK,GAGbD,EAAEC,GADAR,EACKA,EAAMK,EAAQG,GAEdH,EAGTG,GAAK,EAMP,OAFAD,EAAED,OAASlB,EAEJmB"}