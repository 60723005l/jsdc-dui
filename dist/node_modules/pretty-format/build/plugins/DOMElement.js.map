{"version":3,"file":"DOMElement.js","sources":["../../../../../node_modules/pretty-format/build/plugins/DOMElement.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\n\nvar _markup = require('./lib/markup');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n\nconst testHasAttribute = val => {\n  try {\n    return typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n  } catch {\n    return false;\n  }\n};\n\nconst testNode = val => {\n  const constructorName = val.constructor.name;\n  const {nodeType, tagName} = val;\n  const isCustomElement =\n    (typeof tagName === 'string' && tagName.includes('-')) ||\n    testHasAttribute(val);\n  return (\n    (nodeType === ELEMENT_NODE &&\n      (ELEMENT_REGEXP.test(constructorName) || isCustomElement)) ||\n    (nodeType === TEXT_NODE && constructorName === 'Text') ||\n    (nodeType === COMMENT_NODE && constructorName === 'Comment') ||\n    (nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment')\n  );\n};\n\nconst test = val => {\n  var _val$constructor;\n\n  return (\n    (val === null || val === void 0\n      ? void 0\n      : (_val$constructor = val.constructor) === null ||\n        _val$constructor === void 0\n      ? void 0\n      : _val$constructor.name) && testNode(val)\n  );\n};\n\nexports.test = test;\n\nfunction nodeIsText(node) {\n  return node.nodeType === TEXT_NODE;\n}\n\nfunction nodeIsComment(node) {\n  return node.nodeType === COMMENT_NODE;\n}\n\nfunction nodeIsFragment(node) {\n  return node.nodeType === FRAGMENT_NODE;\n}\n\nconst serialize = (node, config, indentation, depth, refs, printer) => {\n  if (nodeIsText(node)) {\n    return (0, _markup.printText)(node.data, config);\n  }\n\n  if (nodeIsComment(node)) {\n    return (0, _markup.printComment)(node.data, config);\n  }\n\n  const type = nodeIsFragment(node)\n    ? 'DocumentFragment'\n    : node.tagName.toLowerCase();\n\n  if (++depth > config.maxDepth) {\n    return (0, _markup.printElementAsLeaf)(type, config);\n  }\n\n  return (0, _markup.printElement)(\n    type,\n    (0, _markup.printProps)(\n      nodeIsFragment(node)\n        ? []\n        : Array.from(node.attributes)\n            .map(attr => attr.name)\n            .sort(),\n      nodeIsFragment(node)\n        ? {}\n        : Array.from(node.attributes).reduce((props, attribute) => {\n            props[attribute.name] = attribute.value;\n            return props;\n          }, {}),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    (0, _markup.printChildren)(\n      Array.prototype.slice.call(node.childNodes || node.children),\n      config,\n      indentation + config.indent,\n      depth,\n      refs,\n      printer\n    ),\n    config,\n    indentation\n  );\n};\n\nexports.serialize = serialize;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;\n"],"names":["Object","defineProperty","DOMElement","value","test","serialize","_markup","require$$0","ELEMENT_REGEXP","val","_val$constructor","constructor","name","constructorName","nodeType","tagName","isCustomElement","includes","hasAttribute","testHasAttribute","testNode","nodeIsFragment","node","config","indentation","depth","refs","printer","nodeIsText","printText","data","nodeIsComment","printComment","type","toLowerCase","maxDepth","printElementAsLeaf","printElement","printProps","Array","from","attributes","map","attr","sort","reduce","props","attribute","indent","printChildren","prototype","slice","call","childNodes","children","_default","default"],"mappings":"kJAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAAE,KAAgCF,EAAAG,yBAAqB,EAErD,IAAIC,EAAUC,EAQd,MAIMC,EAAiB,4BAyBjBJ,EAAOK,IACX,IAAIC,EAEJ,OACGD,MAAAA,GAE4C,QAAxCC,EAAmBD,EAAIE,mBACH,IAArBD,OAFA,EAIAA,EAAiBE,OAxBRH,CAAAA,IACf,MAAMI,EAAkBJ,EAAIE,YAAYC,MAClCE,SAACA,EAAQC,QAAEA,GAAWN,EACtBO,EACgB,iBAAZD,GAAwBA,EAAQE,SAAS,MAZ5BR,CAAAA,IACvB,IACE,MAAmC,mBAArBA,EAAIS,cAA+BT,EAAIS,aAAa,MAClE,MACA,OAAO,IASPC,CAAiBV,GACnB,OApBmB,IAqBhBK,IACEN,EAAeJ,KAAKS,IAAoBG,IArB7B,IAsBbF,GAA8C,SAApBD,GArBV,IAsBhBC,GAAiD,YAApBD,GArBZ,KAsBjBC,GAAkD,qBAApBD,GAaDO,CAASX,IAc3C,SAASY,EAAeC,GACtB,OAlDoB,KAkDbA,EAAKR,SAXFZ,EAAAE,KAAGA,EAcf,MAAMC,EAAY,CAACiB,EAAMC,EAAQC,EAAaC,EAAOC,EAAMC,KACzD,GAbF,SAAoBL,GAClB,OA5CgB,IA4CTA,EAAKR,SAYRc,CAAWN,GACb,OAAO,EAAIhB,EAAQuB,WAAWP,EAAKQ,KAAMP,GAG3C,GAbF,SAAuBD,GACrB,OA/CmB,IA+CZA,EAAKR,SAYRiB,CAAcT,GAChB,OAAO,EAAIhB,EAAQ0B,cAAcV,EAAKQ,KAAMP,GAG9C,MAAMU,EAAOZ,EAAeC,GACxB,mBACAA,EAAKP,QAAQmB,cAEjB,QAAMT,EAAQF,EAAOY,UACZ,EAAI7B,EAAQ8B,oBAAoBH,EAAMV,IAGxC,EAAIjB,EAAQ+B,cACjBJ,GACA,EAAI3B,EAAQgC,YACVjB,EAAeC,GACX,GACAiB,MAAMC,KAAKlB,EAAKmB,YACbC,KAAIC,GAAQA,EAAK/B,OACjBgC,OACPvB,EAAeC,GACX,GACAiB,MAAMC,KAAKlB,EAAKmB,YAAYI,QAAO,CAACC,EAAOC,KACzCD,EAAMC,EAAUnC,MAAQmC,EAAU5C,MAC3B2C,IACN,IACPvB,EACAC,EAAcD,EAAOyB,OACrBvB,EACAC,EACAC,IAEF,EAAIrB,EAAQ2C,eACVV,MAAMW,UAAUC,MAAMC,KAAK9B,EAAK+B,YAAc/B,EAAKgC,UACnD/B,EACAC,EAAcD,EAAOyB,OACrBvB,EACAC,EACAC,GAEFJ,EACAC,IAIatB,EAAAG,UAAGA,EAKpB,IAAIkD,EAJW,CACblD,UAAAA,EACAD,KAAAA,GAGFF,EAAAsD,QAAkBD"}