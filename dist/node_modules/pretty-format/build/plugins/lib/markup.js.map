{"version":3,"file":"markup.js","sources":["../../../../../../node_modules/pretty-format/build/plugins/lib/markup.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.printText =\n  exports.printProps =\n  exports.printElementAsLeaf =\n  exports.printElement =\n  exports.printComment =\n  exports.printChildren =\n    void 0;\n\nvar _escapeHTML = _interopRequireDefault(require('./escapeHTML'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Return empty string if keys is empty.\nconst printProps = (keys, props, config, indentation, depth, refs, printer) => {\n  const indentationNext = indentation + config.indent;\n  const colors = config.colors;\n  return keys\n    .map(key => {\n      const value = props[key];\n      let printed = printer(value, config, indentationNext, depth, refs);\n\n      if (typeof value !== 'string') {\n        if (printed.indexOf('\\n') !== -1) {\n          printed =\n            config.spacingOuter +\n            indentationNext +\n            printed +\n            config.spacingOuter +\n            indentation;\n        }\n\n        printed = '{' + printed + '}';\n      }\n\n      return (\n        config.spacingInner +\n        indentation +\n        colors.prop.open +\n        key +\n        colors.prop.close +\n        '=' +\n        colors.value.open +\n        printed +\n        colors.value.close\n      );\n    })\n    .join('');\n}; // Return empty string if children is empty.\n\nexports.printProps = printProps;\n\nconst printChildren = (children, config, indentation, depth, refs, printer) =>\n  children\n    .map(\n      child =>\n        config.spacingOuter +\n        indentation +\n        (typeof child === 'string'\n          ? printText(child, config)\n          : printer(child, config, indentation, depth, refs))\n    )\n    .join('');\n\nexports.printChildren = printChildren;\n\nconst printText = (text, config) => {\n  const contentColor = config.colors.content;\n  return (\n    contentColor.open + (0, _escapeHTML.default)(text) + contentColor.close\n  );\n};\n\nexports.printText = printText;\n\nconst printComment = (comment, config) => {\n  const commentColor = config.colors.comment;\n  return (\n    commentColor.open +\n    '<!--' +\n    (0, _escapeHTML.default)(comment) +\n    '-->' +\n    commentColor.close\n  );\n}; // Separate the functions to format props, children, and element,\n// so a plugin could override a particular function, if needed.\n// Too bad, so sad: the traditional (but unnecessary) space\n// in a self-closing tagColor requires a second test of printedProps.\n\nexports.printComment = printComment;\n\nconst printElement = (\n  type,\n  printedProps,\n  printedChildren,\n  config,\n  indentation\n) => {\n  const tagColor = config.colors.tag;\n  return (\n    tagColor.open +\n    '<' +\n    type +\n    (printedProps &&\n      tagColor.close +\n        printedProps +\n        config.spacingOuter +\n        indentation +\n        tagColor.open) +\n    (printedChildren\n      ? '>' +\n        tagColor.close +\n        printedChildren +\n        config.spacingOuter +\n        indentation +\n        tagColor.open +\n        '</' +\n        type\n      : (printedProps && !config.min ? '' : ' ') + '/') +\n    '>' +\n    tagColor.close\n  );\n};\n\nexports.printElement = printElement;\n\nconst printElementAsLeaf = (type, config) => {\n  const tagColor = config.colors.tag;\n  return (\n    tagColor.open +\n    '<' +\n    type +\n    tagColor.close +\n    ' â€¦' +\n    tagColor.open +\n    ' />' +\n    tagColor.close\n  );\n};\n\nexports.printElementAsLeaf = printElementAsLeaf;\n"],"names":["Object","defineProperty","markup","value","printText","printProps","printElementAsLeaf","printElement","printComment","printChildren","obj","_escapeHTML","require$$0","__esModule","default","keys","props","config","indentation","depth","refs","printer","indentationNext","indent","colors","map","key","printed","indexOf","spacingOuter","spacingInner","prop","open","close","join","children","child","text","contentColor","content","comment","commentColor","type","printedProps","printedChildren","tagColor","tag","min"],"mappings":"4NAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAEQD,EAAAE,UACGF,EAAAG,WACQH,EAAAI,mBACNJ,EAAAK,aACAL,EAAAM,aACCN,EAAAO,mBACnB,EAEJ,IAEgCC,EAF5BC,GAE4BD,EAFSE,IAGzBF,EAAIG,WAAaH,EAAM,CAACI,QAASJ,GA8C/BR,EAAAG,WApCC,CAACU,EAAMC,EAAOC,EAAQC,EAAaC,EAAOC,EAAMC,KACjE,MAAMC,EAAkBJ,EAAcD,EAAOM,OACvCC,EAASP,EAAOO,OACtB,OAAOT,EACJU,KAAIC,IACH,MAAMvB,EAAQa,EAAMU,GACpB,IAAIC,EAAUN,EAAQlB,EAAOc,EAAQK,EAAiBH,EAAOC,GAe7D,MAbqB,iBAAVjB,KACsB,IAA3BwB,EAAQC,QAAQ,QAClBD,EACEV,EAAOY,aACPP,EACAK,EACAV,EAAOY,aACPX,GAGJS,EAAU,IAAMA,EAAU,KAI1BV,EAAOa,aACPZ,EACAM,EAAOO,KAAKC,KACZN,EACAF,EAAOO,KAAKE,MACZ,IACAT,EAAOrB,MAAM6B,KACbL,EACAH,EAAOrB,MAAM8B,SAGhBC,KAAK,KAiBWhC,EAAAO,cAZC,CAAC0B,EAAUlB,EAAQC,EAAaC,EAAOC,EAAMC,IACjEc,EACGV,KACCW,GACEnB,EAAOY,aACPX,GACkB,iBAAVkB,EACJhC,EAAUgC,EAAOnB,GACjBI,EAAQe,EAAOnB,EAAQC,EAAaC,EAAOC,MAElDc,KAAK,IAIV,MAAM9B,EAAY,CAACiC,EAAMpB,KACvB,MAAMqB,EAAerB,EAAOO,OAAOe,QACnC,OACED,EAAaN,MAAO,EAAIrB,EAAYG,SAASuB,GAAQC,EAAaL,OAIrD/B,EAAAE,UAAGA,EAgBAF,EAAAM,aAdC,CAACgC,EAASvB,KAC7B,MAAMwB,EAAexB,EAAOO,OAAOgB,QACnC,OACEC,EAAaT,KACb,WACA,EAAIrB,EAAYG,SAAS0B,GACzB,SACAC,EAAaR,OA0CG/B,EAAAK,aAjCC,CACnBmC,EACAC,EACAC,EACA3B,EACAC,KAEA,MAAM2B,EAAW5B,EAAOO,OAAOsB,IAC/B,OACED,EAASb,KACT,IACAU,GACCC,GACCE,EAASZ,MACPU,EACA1B,EAAOY,aACPX,EACA2B,EAASb,OACZY,EACG,IACAC,EAASZ,MACTW,EACA3B,EAAOY,aACPX,EACA2B,EAASb,KACT,KACAU,GACCC,IAAiB1B,EAAO8B,IAAM,GAAK,KAAO,KAC/C,IACAF,EAASZ,OAoBb/B,EAAAI,mBAd2B,CAACoC,EAAMzB,KAChC,MAAM4B,EAAW5B,EAAOO,OAAOsB,IAC/B,OACED,EAASb,KACT,IACAU,EACAG,EAASZ,MACT,KACAY,EAASb,KACT,MACAa,EAASZ"}