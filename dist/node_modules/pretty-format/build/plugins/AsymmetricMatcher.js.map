{"version":3,"file":"AsymmetricMatcher.js","sources":["../../../../../node_modules/pretty-format/build/plugins/AsymmetricMatcher.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\n\nvar _collections = require('../collections');\n\nvar global = (function () {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  } else if (typeof global !== 'undefined') {\n    return global;\n  } else if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')();\n  }\n})();\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nconst asymmetricMatcher =\n  typeof Symbol === 'function' && Symbol.for\n    ? Symbol.for('jest.asymmetricMatcher')\n    : 0x1357a5;\nconst SPACE = ' ';\n\nconst serialize = (val, config, indentation, depth, refs, printer) => {\n  const stringedValue = val.toString();\n\n  if (\n    stringedValue === 'ArrayContaining' ||\n    stringedValue === 'ArrayNotContaining'\n  ) {\n    if (++depth > config.maxDepth) {\n      return '[' + stringedValue + ']';\n    }\n\n    return (\n      stringedValue +\n      SPACE +\n      '[' +\n      (0, _collections.printListItems)(\n        val.sample,\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      ) +\n      ']'\n    );\n  }\n\n  if (\n    stringedValue === 'ObjectContaining' ||\n    stringedValue === 'ObjectNotContaining'\n  ) {\n    if (++depth > config.maxDepth) {\n      return '[' + stringedValue + ']';\n    }\n\n    return (\n      stringedValue +\n      SPACE +\n      '{' +\n      (0, _collections.printObjectProperties)(\n        val.sample,\n        config,\n        indentation,\n        depth,\n        refs,\n        printer\n      ) +\n      '}'\n    );\n  }\n\n  if (\n    stringedValue === 'StringMatching' ||\n    stringedValue === 'StringNotMatching'\n  ) {\n    return (\n      stringedValue +\n      SPACE +\n      printer(val.sample, config, indentation, depth, refs)\n    );\n  }\n\n  if (\n    stringedValue === 'StringContaining' ||\n    stringedValue === 'StringNotContaining'\n  ) {\n    return (\n      stringedValue +\n      SPACE +\n      printer(val.sample, config, indentation, depth, refs)\n    );\n  }\n\n  return val.toAsymmetricMatcher();\n};\n\nexports.serialize = serialize;\n\nconst test = val => val && val.$$typeof === asymmetricMatcher;\n\nexports.test = test;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;\n"],"names":["Object","defineProperty","AsymmetricMatcher","value","test","serialize","_collections","require$$0","global","globalThis","self","window","Function","Symbol","asymmetricMatcher","for","val","config","indentation","depth","refs","printer","stringedValue","toString","maxDepth","printListItems","sample","printObjectProperties","toAsymmetricMatcher","$$typeof","_default","default"],"mappings":"gKAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAAE,KAAgCF,EAAAG,yBAAqB,EAErD,IAAIC,EAAeC,EAEfC,EACwB,oBAAfC,WACFA,gBACoB,IAAXD,EACTA,EACkB,oBAATE,KACTA,KACoB,oBAAXC,OACTA,OAEAC,SAAS,cAATA,GAIPC,EAASL,EAAO,6BAA+BA,EAAOK,OAC1D,MAAMC,EACc,mBAAXD,GAAyBA,EAAOE,IACnCF,EAAOE,IAAI,0BACX,QAGAV,EAAY,CAACW,EAAKC,EAAQC,EAAaC,EAAOC,EAAMC,KACxD,MAAMC,EAAgBN,EAAIO,WAE1B,MACoB,oBAAlBD,GACkB,uBAAlBA,IAEMH,EAAQF,EAAOO,SACZ,IAAMF,EAAgB,IAI7BA,EAAAA,MAGA,EAAIhB,EAAamB,gBACfT,EAAIU,OACJT,EACAC,EACAC,EACAC,EACAC,GAEF,IAKgB,qBAAlBC,GACkB,wBAAlBA,IAEMH,EAAQF,EAAOO,SACZ,IAAMF,EAAgB,IAI7BA,EAAAA,MAGA,EAAIhB,EAAaqB,uBACfX,EAAIU,OACJT,EACAC,EACAC,EACAC,EACAC,GAEF,IAKgB,mBAAlBC,GACkB,sBAAlBA,GAUkB,qBAAlBA,GACkB,wBAAlBA,EAREA,EA1DQ,IA4DRD,EAAQL,EAAIU,OAAQT,EAAQC,EAAaC,EAAOC,GAe7CJ,EAAIY,uBAGI1B,EAAAG,UAAGA,EAEpB,MAAMD,EAAOY,GAAOA,GAAOA,EAAIa,WAAaf,EAEhCZ,EAAAE,KAAGA,EAKf,IAAI0B,EAJW,CACbzB,UAAAA,EACAD,KAAAA,GAGFF,EAAA6B,QAAkBD"}