{"version":3,"file":"DOMCollection.js","sources":["../../../../../node_modules/pretty-format/build/plugins/DOMCollection.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.test = exports.serialize = exports.default = void 0;\n\nvar _collections = require('../collections');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\nconst SPACE = ' ';\nconst OBJECT_NAMES = ['DOMStringMap', 'NamedNodeMap'];\nconst ARRAY_REGEXP = /^(HTML\\w*Collection|NodeList)$/;\n\nconst testName = name =>\n  OBJECT_NAMES.indexOf(name) !== -1 || ARRAY_REGEXP.test(name);\n\nconst test = val =>\n  val &&\n  val.constructor &&\n  !!val.constructor.name &&\n  testName(val.constructor.name);\n\nexports.test = test;\n\nconst isNamedNodeMap = collection =>\n  collection.constructor.name === 'NamedNodeMap';\n\nconst serialize = (collection, config, indentation, depth, refs, printer) => {\n  const name = collection.constructor.name;\n\n  if (++depth > config.maxDepth) {\n    return '[' + name + ']';\n  }\n\n  return (\n    (config.min ? '' : name + SPACE) +\n    (OBJECT_NAMES.indexOf(name) !== -1\n      ? '{' +\n        (0, _collections.printObjectProperties)(\n          isNamedNodeMap(collection)\n            ? Array.from(collection).reduce((props, attribute) => {\n                props[attribute.name] = attribute.value;\n                return props;\n              }, {})\n            : {...collection},\n          config,\n          indentation,\n          depth,\n          refs,\n          printer\n        ) +\n        '}'\n      : '[' +\n        (0, _collections.printListItems)(\n          Array.from(collection),\n          config,\n          indentation,\n          depth,\n          refs,\n          printer\n        ) +\n        ']')\n  );\n};\n\nexports.serialize = serialize;\nconst plugin = {\n  serialize,\n  test\n};\nvar _default = plugin;\nexports.default = _default;\n"],"names":["Object","defineProperty","DOMCollection","value","test","serialize","_collections","require$$0","OBJECT_NAMES","ARRAY_REGEXP","val","constructor","name","indexOf","collection","config","indentation","depth","refs","printer","maxDepth","min","printObjectProperties","isNamedNodeMap","Array","from","reduce","props","attribute","printListItems","_default","default"],"mappings":"4JAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAAE,KAAgCF,EAAAG,yBAAqB,EAErD,IAAIC,EAAeC,EAUnB,MACMC,EAAe,CAAC,eAAgB,gBAChCC,EAAe,iCAKfL,EAAOM,IACXA,OAAAA,GACAA,EAAIC,eACFD,EAAIC,YAAYC,OANHA,EAONF,EAAIC,YAAYC,MANO,IAAhCJ,EAAaK,QAAQD,IAAgBH,EAAaL,KAAKQ,IADxCA,IAAAA,GASLV,EAAAE,KAAGA,EAEf,MAGMC,EAAY,CAACS,EAAYC,EAAQC,EAAaC,EAAOC,EAAMC,KAC/D,MAAMP,EAAOE,EAAWH,YAAYC,KAEpC,QAAMK,EAAQF,EAAOK,SACZ,IAAMR,EAAO,KAInBG,EAAOM,IAAM,GAAKT,EA1BT,OA2BuB,IAAhCJ,EAAaK,QAAQD,GAClB,KACA,EAAIN,EAAagB,uBAdFR,CAAAA,GACW,iBAAhCA,EAAWH,YAAYC,KAcfW,CAAeT,GACXU,MAAMC,KAAKX,GAAYY,QAAO,CAACC,EAAOC,KACpCD,EAAMC,EAAUhB,MAAQgB,EAAUzB,MAC3BwB,IACN,IACH,IAAIb,GACRC,EACAC,EACAC,EACAC,EACAC,GAEF,IACA,KACA,EAAIb,EAAauB,gBACfL,MAAMC,KAAKX,GACXC,EACAC,EACAC,EACAC,EACAC,GAEF,MAISjB,EAAAG,UAAGA,EAKpB,IAAIyB,EAJW,CACbzB,UAAAA,EACAD,KAAAA,GAGFF,EAAA6B,QAAkBD"}