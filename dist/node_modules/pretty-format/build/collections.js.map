{"version":3,"file":"collections.js","sources":["../../../../node_modules/pretty-format/build/collections.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.printIteratorEntries = printIteratorEntries;\nexports.printIteratorValues = printIteratorValues;\nexports.printListItems = printListItems;\nexports.printObjectProperties = printObjectProperties;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst getKeysOfEnumerableProperties = (object, compareKeys) => {\n  const keys = Object.keys(object).sort(compareKeys);\n\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(object).forEach(symbol => {\n      if (Object.getOwnPropertyDescriptor(object, symbol).enumerable) {\n        keys.push(symbol);\n      }\n    });\n  }\n\n  return keys;\n};\n/**\n * Return entries (for example, of a map)\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, braces)\n */\n\nfunction printIteratorEntries(\n  iterator,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer, // Too bad, so sad that separator for ECMAScript Map has been ' => '\n  // What a distracting diff if you change a data structure to/from\n  // ECMAScript Object or Immutable.Map/OrderedMap which use the default.\n  separator = ': '\n) {\n  let result = '';\n  let current = iterator.next();\n\n  if (!current.done) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    while (!current.done) {\n      const name = printer(\n        current.value[0],\n        config,\n        indentationNext,\n        depth,\n        refs\n      );\n      const value = printer(\n        current.value[1],\n        config,\n        indentationNext,\n        depth,\n        refs\n      );\n      result += indentationNext + name + separator + value;\n      current = iterator.next();\n\n      if (!current.done) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n/**\n * Return values (for example, of a set)\n * with spacing, indentation, and comma\n * without surrounding punctuation (braces or brackets)\n */\n\nfunction printIteratorValues(\n  iterator,\n  config,\n  indentation,\n  depth,\n  refs,\n  printer\n) {\n  let result = '';\n  let current = iterator.next();\n\n  if (!current.done) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    while (!current.done) {\n      result +=\n        indentationNext +\n        printer(current.value, config, indentationNext, depth, refs);\n      current = iterator.next();\n\n      if (!current.done) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n/**\n * Return items (for example, of an array)\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, brackets)\n **/\n\nfunction printListItems(list, config, indentation, depth, refs, printer) {\n  let result = '';\n\n  if (list.length) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    for (let i = 0; i < list.length; i++) {\n      result += indentationNext;\n\n      if (i in list) {\n        result += printer(list[i], config, indentationNext, depth, refs);\n      }\n\n      if (i < list.length - 1) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n/**\n * Return properties of an object\n * with spacing, indentation, and comma\n * without surrounding punctuation (for example, braces)\n */\n\nfunction printObjectProperties(val, config, indentation, depth, refs, printer) {\n  let result = '';\n  const keys = getKeysOfEnumerableProperties(val, config.compareKeys);\n\n  if (keys.length) {\n    result += config.spacingOuter;\n    const indentationNext = indentation + config.indent;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const name = printer(key, config, indentationNext, depth, refs);\n      const value = printer(val[key], config, indentationNext, depth, refs);\n      result += indentationNext + name + ': ' + value;\n\n      if (i < keys.length - 1) {\n        result += ',' + config.spacingInner;\n      } else if (!config.min) {\n        result += ',';\n      }\n    }\n\n    result += config.spacingOuter + indentation;\n  }\n\n  return result;\n}\n"],"names":["Object","defineProperty","collections","value","printIteratorEntries","iterator","config","indentation","depth","refs","printer","separator","result","current","next","done","spacingOuter","indentationNext","indent","name","min","spacingInner","printIteratorValues","printListItems","list","length","i","printObjectProperties","val","keys","object","compareKeys","sort","getOwnPropertySymbols","forEach","symbol","getOwnPropertyDescriptor","enumerable","push","getKeysOfEnumerableProperties","key"],"mappings":"gIAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAEmBD,EAAAE,qBA+B5B,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EAAY,MAEZ,IAAIC,EAAS,GACTC,EAAUR,EAASS,OAEvB,IAAKD,EAAQE,KAAM,CACjBH,GAAUN,EAAOU,aACjB,MAAMC,EAAkBV,EAAcD,EAAOY,OAE7C,MAAQL,EAAQE,MAAM,CACpB,MAAMI,EAAOT,EACXG,EAAQV,MAAM,GACdG,EACAW,EACAT,EACAC,GAEIN,EAAQO,EACZG,EAAQV,MAAM,GACdG,EACAW,EACAT,EACAC,GAEFG,GAAUK,EAAkBE,EAAOR,EAAYR,EAC/CU,EAAUR,EAASS,OAEdD,EAAQE,KAEDT,EAAOc,MACjBR,GAAU,KAFVA,GAAU,IAAMN,EAAOe,aAM3BT,GAAUN,EAAOU,aAAeT,EAGlC,OAAOK,GA5EkBV,EAAAoB,oBAoF3B,SACEjB,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIE,EAAS,GACTC,EAAUR,EAASS,OAEvB,IAAKD,EAAQE,KAAM,CACjBH,GAAUN,EAAOU,aACjB,MAAMC,EAAkBV,EAAcD,EAAOY,OAE7C,MAAQL,EAAQE,MACdH,GACEK,EACAP,EAAQG,EAAQV,MAAOG,EAAQW,EAAiBT,EAAOC,GACzDI,EAAUR,EAASS,OAEdD,EAAQE,KAEDT,EAAOc,MACjBR,GAAU,KAFVA,GAAU,IAAMN,EAAOe,aAM3BT,GAAUN,EAAOU,aAAeT,EAGlC,OAAOK,GAlHaV,EAAAqB,eA0HtB,SAAwBC,EAAMlB,EAAQC,EAAaC,EAAOC,EAAMC,GAC9D,IAAIE,EAAS,GAEb,GAAIY,EAAKC,OAAQ,CACfb,GAAUN,EAAOU,aACjB,MAAMC,EAAkBV,EAAcD,EAAOY,OAE7C,IAAK,IAAIQ,EAAI,EAAGA,EAAIF,EAAKC,OAAQC,IAC/Bd,GAAUK,EAENS,KAAKF,IACPZ,GAAUF,EAAQc,EAAKE,GAAIpB,EAAQW,EAAiBT,EAAOC,IAGzDiB,EAAIF,EAAKC,OAAS,EACpBb,GAAU,IAAMN,EAAOe,aACbf,EAAOc,MACjBR,GAAU,KAIdA,GAAUN,EAAOU,aAAeT,EAGlC,OAAOK,GAjJoBV,EAAAyB,sBAyJ7B,SAA+BC,EAAKtB,EAAQC,EAAaC,EAAOC,EAAMC,GACpE,IAAIE,EAAS,GACb,MAAMiB,EAlJ8B,EAACC,EAAQC,KAC7C,MAAMF,EAAO7B,OAAO6B,KAAKC,GAAQE,KAAKD,GAElC/B,OAAOiC,uBACTjC,OAAOiC,sBAAsBH,GAAQI,SAAQC,IACvCnC,OAAOoC,yBAAyBN,EAAQK,GAAQE,YAClDR,EAAKS,KAAKH,MAKhB,OAAON,GAuIMU,CAA8BX,EAAKtB,EAAOyB,aAEvD,GAAIF,EAAKJ,OAAQ,CACfb,GAAUN,EAAOU,aACjB,MAAMC,EAAkBV,EAAcD,EAAOY,OAE7C,IAAK,IAAIQ,EAAI,EAAGA,EAAIG,EAAKJ,OAAQC,IAAK,CACpC,MAAMc,EAAMX,EAAKH,GACXP,EAAOT,EAAQ8B,EAAKlC,EAAQW,EAAiBT,EAAOC,GACpDN,EAAQO,EAAQkB,EAAIY,GAAMlC,EAAQW,EAAiBT,EAAOC,GAChEG,GAAUK,EAAkBE,EAAO,KAAOhB,EAEtCuB,EAAIG,EAAKJ,OAAS,EACpBb,GAAU,IAAMN,EAAOe,aACbf,EAAOc,MACjBR,GAAU,KAIdA,GAAUN,EAAOU,aAAeT,EAGlC,OAAOK"}